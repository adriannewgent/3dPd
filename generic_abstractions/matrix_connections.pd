#N canvas 118 197 1003 728 10;
#N canvas 427 296 540 354 matrix 0;
#N canvas 1 212 1234 315 the_matrix 0;
#X obj 100 100 mtx_*~ 12 11 15 ...........................................
;
#X obj 100 50 catch~ output0;
#X obj 210 50 catch~ output1;
#X obj 320 50 catch~ output2;
#X obj 430 50 catch~ output3;
#X obj 540 50 catch~ output4;
#X obj 650 50 catch~ output5;
#X obj 760 50 catch~ output6;
#X obj 870 50 catch~ output7;
#X obj 980 50 catch~ output8;
#X obj 1090 50 catch~ output9;
#X obj 1200 50 catch~ output10;
#X obj 100 150 send~ input0;
#X obj 200 150 send~ input1;
#X obj 300 150 send~ input2;
#X obj 400 150 send~ input3;
#X obj 500 150 send~ input4;
#X obj 600 150 send~ input5;
#X obj 700 150 send~ input6;
#X obj 800 150 send~ input7;
#X obj 900 150 send~ input8;
#X obj 1000 150 send~ input9;
#X obj 1100 150 send~ input10;
#X obj 1200 150 send~ input11;
#X obj 10 50 r to_mtx_mul;
#X obj 10 150 r mtx_ramp;
#X connect 0 0 12 0;
#X connect 0 1 13 0;
#X connect 0 2 14 0;
#X connect 0 3 15 0;
#X connect 0 4 16 0;
#X connect 0 5 17 0;
#X connect 0 6 18 0;
#X connect 0 7 19 0;
#X connect 0 8 20 0;
#X connect 0 9 21 0;
#X connect 0 10 22 0;
#X connect 0 11 23 0;
#X connect 1 0 0 1;
#X connect 2 0 0 2;
#X connect 3 0 0 3;
#X connect 4 0 0 4;
#X connect 5 0 0 5;
#X connect 6 0 0 6;
#X connect 7 0 0 7;
#X connect 8 0 0 8;
#X connect 9 0 0 9;
#X connect 10 0 0 10;
#X connect 11 0 0 11;
#X connect 24 0 0 0;
#X connect 25 0 0 12;
#X restore 37 310 pd the_matrix;
#X msg 69 132 clear;
#N canvas 643 82 362 364 make_cathes 0;
#X obj 120 205 + 100;
#X msg 120 250 obj \$1 50 catch~ output\$2;
#X obj 120 227 pack;
#X obj 120 161 t f f;
#X obj 81 27 inlet;
#X obj 120 272 outlet make_obj;
#X obj 120 183 * 110;
#X obj 81 49 unpack;
#X obj 81 298 outlet num_outlets;
#X obj 120 94 until;
#X obj 120 139 f;
#X obj 150 139 + 1;
#X obj 120 71 t f b;
#X msg 138 117 0;
#X connect 0 0 2 0;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 3 0 6 0;
#X connect 3 1 2 1;
#X connect 4 0 7 0;
#X connect 6 0 0 0;
#X connect 7 0 8 0;
#X connect 7 1 12 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 10 0 3 0;
#X connect 11 0 10 1;
#X connect 12 0 9 0;
#X connect 12 1 13 0;
#X connect 13 0 10 1;
#X restore 37 211 pd make_cathes;
#N canvas 1 82 321 295 make_sends 0;
#X obj 107 103 + 100;
#X obj 107 125 pack;
#X obj 107 59 t f f;
#X obj 107 81 * 100;
#X msg 107 148 obj \$1 150 send~ input\$2;
#X obj 61 10 inlet;
#X obj 107 170 outlet make_obj;
#X obj 61 197 outlet done;
#N canvas 1 82 329 255 loop 0;
#X obj 61 75 until;
#X obj 61 120 f;
#X obj 91 120 + 1;
#X obj 61 142 t f f;
#X obj 61 190 sel;
#X obj 79 166 - 1;
#X obj 131 159 outlet;
#X obj 61 212 outlet;
#X obj 61 31 inlet;
#X obj 61 53 t f b f;
#X msg 79 97 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 0 4 0;
#X connect 3 1 6 0;
#X connect 4 0 7 0;
#X connect 5 0 4 1;
#X connect 8 0 9 0;
#X connect 9 0 0 0;
#X connect 9 1 10 0;
#X connect 9 2 5 0;
#X connect 10 0 1 1;
#X restore 61 36 pd loop;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 2 1 1 1;
#X connect 3 0 0 0;
#X connect 4 0 6 0;
#X connect 5 0 8 0;
#X connect 8 0 7 0;
#X connect 8 1 2 0;
#X restore 37 236 pd make_sends;
#N canvas 1 82 315 289 make_receives 0;
#X msg 109 122 obj 10 50 r to_mtx_mul;
#X msg 86 146 obj 10 150 r mtx_ramp;
#X obj 63 97 t b b b;
#X obj 63 71 inlet;
#X obj 109 175 outlet make_obj;
#X obj 63 197 outlet done;
#X connect 0 0 4 0;
#X connect 1 0 4 0;
#X connect 2 0 5 0;
#X connect 2 1 1 0;
#X connect 2 2 0 0;
#X connect 3 0 2 0;
#X restore 37 262 pd make_receives;
#N canvas 665 82 504 576 make_connections 0;
#X text 206 124 connect to [mtx_*~];
#X text 206 290 connect from [mtx_*~];
#X obj 35 10 inlet;
#X obj 81 100 + 1;
#X msg 81 289 connect 0 \$1 \$2 0;
#X obj 113 245 +;
#X obj 128 223 + 1;
#X msg 81 123 connect \$1 0 0 \$1;
#X obj 81 200 t f f;
#X obj 81 267 pack;
#X obj 35 54 t f f;
#X obj 35 389 +;
#X obj 35 411 + 1;
#X obj 35 433 t f f;
#X obj 35 455 + 1;
#X msg 105 450 connect \$1 0 0 0;
#X msg 35 503 connect \$1 0 0 \$2;
#X obj 35 342 t f f;
#X obj 67 455 + 1;
#X obj 35 479 pack;
#X obj 303 425 outlet connections;
#X obj 391 116 unpack;
#X obj 35 32 f;
#X obj 35 156 f;
#X obj 391 94 inlet list;
#X obj 391 139 t f f;
#X obj 35 320 f;
#X obj 430 303 t f f;
#N canvas 1 82 329 255 loop 0;
#X obj 61 75 until;
#X obj 61 120 f;
#X obj 91 120 + 1;
#X obj 61 142 t f f;
#X obj 61 190 sel;
#X obj 79 166 - 1;
#X obj 131 159 outlet;
#X obj 61 212 outlet;
#X obj 61 31 inlet;
#X obj 61 53 t f b f;
#X msg 79 97 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 0 4 0;
#X connect 3 1 6 0;
#X connect 4 0 7 0;
#X connect 5 0 4 1;
#X connect 8 0 9 0;
#X connect 9 0 0 0;
#X connect 9 1 10 0;
#X connect 9 2 5 0;
#X connect 10 0 1 1;
#X restore 35 78 pd loop;
#N canvas 1 82 329 255 loop 0;
#X obj 61 75 until;
#X obj 61 120 f;
#X obj 91 120 + 1;
#X obj 61 142 t f f;
#X obj 61 190 sel;
#X obj 79 166 - 1;
#X obj 131 159 outlet;
#X obj 61 212 outlet;
#X obj 61 31 inlet;
#X obj 61 53 t f b f;
#X msg 79 99 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 0 4 0;
#X connect 3 1 6 0;
#X connect 4 0 7 0;
#X connect 5 0 4 1;
#X connect 8 0 9 0;
#X connect 9 0 0 0;
#X connect 9 1 10 0;
#X connect 9 2 5 0;
#X connect 10 0 1 1;
#X restore 35 178 pd loop;
#X connect 2 0 22 0;
#X connect 3 0 7 0;
#X connect 4 0 20 0;
#X connect 5 0 9 1;
#X connect 6 0 5 1;
#X connect 7 0 20 0;
#X connect 8 0 9 0;
#X connect 8 1 5 0;
#X connect 9 0 4 0;
#X connect 10 0 28 0;
#X connect 10 1 6 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 13 1 15 0;
#X connect 14 0 19 0;
#X connect 15 0 20 0;
#X connect 16 0 20 0;
#X connect 17 0 11 0;
#X connect 17 1 18 0;
#X connect 18 0 19 1;
#X connect 19 0 16 0;
#X connect 21 0 25 0;
#X connect 21 1 27 0;
#X connect 22 0 10 0;
#X connect 23 0 29 0;
#X connect 24 0 21 0;
#X connect 25 0 23 1;
#X connect 25 1 11 1;
#X connect 26 0 17 0;
#X connect 27 0 26 1;
#X connect 27 1 22 1;
#X connect 28 0 23 0;
#X connect 28 1 3 0;
#X connect 29 0 26 0;
#X connect 29 1 8 0;
#X restore 37 287 pd make_connections;
#X obj 220 228 s pd-the_matrix;
#X obj 37 87 pack;
#X obj 37 109 t l b;
#X obj 37 161 t l l l;
#X obj 37 19 loadbang;
#X obj 37 41 t b b;
#X obj 37 63 \$1;
#X obj 69 63 \$2;
#X msg 220 178 obj 100 100 mtx_*~ \$1 \$2 15 ...........................................
;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 2 1 6 0;
#X connect 3 0 4 0;
#X connect 3 1 6 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 5 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 8 1 1 0;
#X connect 9 0 2 0;
#X connect 9 1 5 1;
#X connect 9 2 14 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 11 1 13 0;
#X connect 12 0 7 0;
#X connect 13 0 7 1;
#X connect 14 0 6 0;
#X restore 37 676 pd matrix \$1 \$2;
#X obj 37 167 until;
#X obj 37 255 f;
#X obj 37 287 &;
#X obj 37 95 +;
#X obj 64 73 * 128;
#X msg 55 232 1;
#X obj 69 255 * 2;
#X text 69 276 bitwise AND with 1 \, 2 \, 4 \, 8 \, 16 \, 32... and
check for inequality with zero;
#X obj 37 143 f;
#X obj 37 119 t b b f b;
#X obj 37 48 unpack f f f f f;
#X obj 376 253 t f f;
#X obj 504 250 +;
#X obj 37 209 t b b;
#X obj 504 226 f;
#X obj 536 226 + 1;
#X msg 522 136 1;
#X obj 504 429 t f f;
#X obj 37 310 != 0;
#X obj 76 355 !=;
#X obj 37 332 t f f;
#X obj 37 400 spigot;
#X obj 76 377 t f f;
#X obj 82 150 sel 1;
#X obj 37 446 f;
#X obj 37 469 pack f f f;
#X obj 37 422 t b f;
#X obj 37 536 list prepend element;
#X obj 37 558 list trim;
#X obj 536 473 list prepend element;
#X obj 536 495 list trim;
#N canvas 839 360 589 312 send_connection_states 0;
#X obj 74 146 unpack;
#X obj 113 169 t f f;
#X obj 34 239 pack;
#X obj 74 186 pack;
#X obj 34 98 inlet;
#X obj 74 208 s outlet_states0;
#X obj 34 261 s inlet_states0;
#X text 197 209 and send connection state to module abstractions;
#X obj 34 121 list split 1;
#X text 127 120 get matrix's outlet and inlet number and connection
state;
#X text 33 21 the inlet and outlet connection states are being sent
in a chain from one module to the next \, until the current inlet or
outlet number is met. no need to delay these values because they are
being delayed according to the ramp time of [mtx_*~] inside the [accumulate_connections]
abstraction;
#X connect 0 0 3 0;
#X connect 0 1 1 0;
#X connect 1 0 3 1;
#X connect 1 1 2 1;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 4 0 8 0;
#X connect 8 0 2 0;
#X connect 8 1 0 0;
#X restore 88 508 pd send_connection_states;
#X obj 606 495 r zero_mtx;
#X obj 37 630 spigot 1;
#X obj 536 622 route float matrix;
#X obj 597 645 list prepend matrix;
#X obj 597 667 list trim;
#X text 76 170 run the loop for as many times as the number of pins
used of current input chip and stop it if you find a connection;
#N canvas 611 657 864 385 update_patching 0;
#X obj 82 153 outlet;
#X obj 27 215 outlet;
#X obj 429 215 del;
#X obj 470 198 t f f;
#X obj 470 176 spigot;
#X obj 429 103 t f f;
#X text 424 67 when patching is deactivated \, send potentiometer values
to control ramp time for [mtx_*~];
#X obj 429 126 sel 1;
#X obj 470 153 r ramp;
#X msg 429 237 15;
#X text 463 231 when patching is reactivated \, delay a bang with the
potentiometer value to set [mtx_*~] back to 15ms;
#X obj 509 120 == 0;
#X obj 429 289 s mtx_ramp;
#X obj 27 86 t f f f;
#X obj 50 109 t f f;
#X obj 82 131 sel 1;
#X text 54 172 send to module abstractions to update on-off states
;
#X obj 50 190 s update_patching;
#X obj 27 64 r patch_update_switch;
#X connect 2 0 9 0;
#X connect 3 0 2 1;
#X connect 3 1 12 0;
#X connect 4 0 3 0;
#X connect 5 0 7 0;
#X connect 5 1 11 0;
#X connect 7 0 2 0;
#X connect 8 0 4 0;
#X connect 9 0 12 0;
#X connect 11 0 4 1;
#X connect 13 0 1 0;
#X connect 13 1 14 0;
#X connect 13 2 5 0;
#X connect 14 0 17 0;
#X connect 14 1 15 0;
#X connect 15 0 0 0;
#X connect 18 0 13 0;
#X restore 264 613 pd update_patching;
#X obj 536 451 pack;
#X text 165 42 incoming bytes are input byte (split in two) \, number
of input pins of current module \, output pin number \, and total number
of input pins of previous modules;
#X obj 37 23 r connections;
#X text 573 449 querry current inlet/outlet connection for comparison
;
#X text 109 359 if inlet/outlet connection has changed let it through
;
#X text 112 468 [mtx_*~] inverts inlet/outlets \, hence the order of
storage;
#X text 110 564 store a new connection and send it to [mtx_*~] if the
patch update switch is on;
#X obj 606 517 mtx_zeros \$1 \$2;
#X obj 536 599 mtx \$1 \$2;
#X obj 37 652 s to_mtx_mul;
#X obj 37 582 t a a;
#X obj 37 491 t l l;
#X connect 1 0 14 0;
#X connect 2 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 19 0;
#X connect 4 0 10 0;
#X connect 5 0 4 1;
#X connect 6 0 2 1;
#X connect 7 0 2 1;
#X connect 9 0 1 0;
#X connect 10 0 9 0;
#X connect 10 1 6 0;
#X connect 10 2 3 1;
#X connect 10 3 17 0;
#X connect 11 0 4 0;
#X connect 11 1 5 0;
#X connect 11 2 9 1;
#X connect 11 3 12 0;
#X connect 11 4 13 1;
#X connect 12 0 26 1;
#X connect 12 1 40 1;
#X connect 13 0 18 0;
#X connect 14 0 2 0;
#X connect 14 1 15 0;
#X connect 15 0 16 0;
#X connect 15 0 13 0;
#X connect 16 0 15 1;
#X connect 17 0 15 1;
#X connect 18 0 25 1;
#X connect 18 1 40 0;
#X connect 19 0 21 0;
#X connect 20 0 23 0;
#X connect 21 0 22 0;
#X connect 21 1 20 0;
#X connect 22 0 27 0;
#X connect 23 0 22 1;
#X connect 23 1 24 0;
#X connect 24 0 1 1;
#X connect 25 0 26 0;
#X connect 26 0 51 0;
#X connect 27 0 25 0;
#X connect 27 1 26 2;
#X connect 28 0 29 0;
#X connect 29 0 50 0;
#X connect 30 0 31 0;
#X connect 31 0 48 0;
#X connect 33 0 47 0;
#X connect 34 0 49 0;
#X connect 35 0 20 1;
#X connect 35 1 36 0;
#X connect 36 0 37 0;
#X connect 37 0 49 0;
#X connect 39 0 34 1;
#X connect 39 1 48 0;
#X connect 40 0 30 0;
#X connect 42 0 11 0;
#X connect 47 0 48 0;
#X connect 48 0 35 0;
#X connect 50 0 34 0;
#X connect 50 1 48 0;
#X connect 51 0 28 0;
#X connect 51 1 32 0;
