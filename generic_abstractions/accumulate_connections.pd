#N canvas 499 173 566 455 10;
#X obj 26 104 swap;
#X obj 26 126 pack;
#X obj 26 209 f;
#X obj 26 148 route 1 0;
#X text 57 198 when the patching update is deactivated \, store value
and output it when it is reactivated;
#X obj 26 389 outlet;
#X obj 26 10 inlet state;
#X obj 116 87 t f f;
#X obj 148 109 sel 1;
#X text 147 130 bang when patching is updated;
#X obj 35 174 loadbang;
#N canvas 500 113 556 302 accumulate-connection-states 0;
#X obj 37 104 +;
#X obj 37 59 * 2;
#X obj 37 81 - 1;
#X obj 83 170 > 0;
#X msg 37 170 0;
#X obj 37 192 t f f;
#X obj 83 209 outlet;
#X obj 37 36 inlet switch_state;
#X obj 37 148 moses 0;
#X obj 37 126 t f f;
#X text 65 62 map 0 to 1 to -1 to 1 so that a 1 will add one and a
0 will subtract one from the states accumulation;
#X connect 0 0 9 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 5 0 0 1;
#X connect 5 1 6 0;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 8 1 3 0;
#X connect 9 0 8 0;
#X connect 9 1 0 1;
#X restore 26 34 pd accumulate-connection-states;
#X obj 26 255 sel 0;
#X obj 26 339 spigot;
#X obj 65 317 == 0;
#X obj 26 293 del 15;
#X msg 26 361 0;
#X obj 26 231 t f f;
#X text 76 339 if a sequence of ones and zeros enter this abstraction
\, even if the last number is 1 \, [del] will output a 0 fifteen ms
after the last 1 . using a [spigot] after [del] will prevent this;
#X obj 116 65 r update_patching;
#X text 242 65 comming from [matrix_connections];
#X connect 0 0 1 0;
#X connect 0 1 1 1;
#X connect 1 0 3 0;
#X connect 2 0 17 0;
#X connect 3 0 2 0;
#X connect 3 1 2 1;
#X connect 6 0 11 0;
#X connect 7 0 0 1;
#X connect 7 1 8 0;
#X connect 8 0 2 0;
#X connect 10 0 2 0;
#X connect 11 0 0 0;
#X connect 12 0 15 0;
#X connect 12 1 5 0;
#X connect 13 0 16 0;
#X connect 14 0 13 1;
#X connect 15 0 13 0;
#X connect 16 0 5 0;
#X connect 17 0 12 0;
#X connect 17 1 14 0;
#X connect 19 0 7 0;
