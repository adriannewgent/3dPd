#N canvas 252 101 1098 947 10;
#X declare -path ../generic_abstractions -path ../externals -lib modular_synthesizer
;
#X obj 44 28 cnv 15 420 90 empty empty Declare_generic_abstractions_path
0 -12 0 14 -204786 -66577 0;
#X obj 49 301 r module\$1;
#X obj 49 323 route 0 1;
#X obj 104 574 map 0 1023 1 -1;
#X obj 159 520 map_zero 1023 100;
#X obj 100 601 r analog_res;
#X obj 155 551 r analog_res;
#X obj 217 497 r analog_res;
#X obj 265 447 r analog_res;
#X obj 79 349 get_switches 4;
#X obj 504 28 cnv 15 490 90 empty empty Use_module_data_and_switch~
0 -12 0 14 -204786 -66577 0;
#X obj 517 69 module_data \$0 \$1 \$2 \$3;
#X obj 517 92 switch~;
#X text 513 34 [module_data \$0 \$1 \$2 \$3] must be used in all module
abstractions \, otherwise the whole system will not work;
#X obj 49 625 map 0 1023 -1 1;
#X obj 214 470 map_zero 1023 1;
#X text 49 133 this is your workspace. in this template four potentiometers
\, four switches \, four signal inputs and four signal outputs are
used. change to fit your module's setup.;
#X text 195 347 <- get your switch data here;
#X text 234 414 <- get your potentiometer values here;
#X text 306 521 <- map your potentiometer ranges here;
#X text 583 701 <- get your signal inputs here;
#X text 597 892 <- get your signal outputs here;
#X text 50 36 you must declare the path to the generic abstractions
as they are used in all module abstractions ([get_switches] \, [assemble_analog_inputs]
\, [map] \, and [module_data].;
#X text 575 93 <- control the DSP of the module accodring to its activity
;
#X text 48 186 remember that signal inputs and switches share the same
chip on the module's hardware. this means that since you can have eight
inputs in total \, their total number added must not exceed eight (hence
four of each in this template). the same applies to signal outputs
and LEDs \, since they also share the same chip on the module's hardware.
Potentiometers are also limited to eight per module.;
#X text 606 731 <- get your input connection states here;
#X text 616 852 <- get your output connection states here;
#X obj 64 732 input_state 0;
#X obj 204 732 input_state 1;
#X obj 344 732 input_state 2;
#X obj 484 732 input_state 3;
#X obj 64 852 output_state 0;
#X obj 204 852 output_state 1;
#X obj 344 852 output_state 2;
#X obj 484 852 output_state 3;
#X obj 49 701 module_input~ 0;
#X obj 189 701 module_input~ 1;
#X obj 329 701 module_input~ 2;
#X obj 469 701 module_input~ 3;
#X obj 49 891 module_output~ 0;
#X obj 189 891 module_output~ 1;
#X obj 329 891 module_output~ 2;
#X obj 469 891 module_output~ 3;
#X text 130 300 <- get your switch and potentiometer data here;
#X obj 50 89 declare -path ../generic_abstractions -path ../externals
-lib modular_synthesizer;
#X obj 49 416 assemble_analog_inputs 4;
#X connect 1 0 2 0;
#X connect 2 0 45 0;
#X connect 2 1 9 0;
#X connect 5 0 14 2;
#X connect 6 0 3 2;
#X connect 7 0 4 1;
#X connect 8 0 15 1;
#X connect 11 0 12 0;
#X connect 45 0 14 0;
#X connect 45 1 3 0;
#X connect 45 2 4 0;
#X connect 45 3 15 0;
