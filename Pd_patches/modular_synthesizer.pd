#N canvas 539 135 695 799 10;
#X declare -path ./generic_abstractions -path ./modules;
#X text 82 539 close serial port;
#X text 44 443 check serial devices;
#X floatatom 57 493 5 0 0 0 - - -, f 5;
#X text 55 478 open serial port;
#X text 68 507 open device by name;
#X symbolatom 70 524 0 0 0 0 - - -;
#X msg 45 460 devices;
#X msg 83 556 close;
#X obj 90 632 r to_comport;
#N canvas 917 174 397 357 modules 0;
#X text 41 15 Module abstraction arguments:;
#X text 40 53 2nd: number of inlets;
#X text 40 71 3rd: number of outlets;
#X text 103 103 <- stuff needed on load;
#N canvas 1172 303 557 565 init 0;
#X obj 17 127 loadbang;
#X obj 17 149 del 250;
#X obj 17 172 s module_data0;
#X text 13 14 Bang the first [module_data] abstraction so it can create
the names to all its [module_input~] \, [module_output~] \, [input_state]
\, and [output_state] abstractions. A delay is necessary so the all
[module_data] abstractions have time to do their internal workings
before they are ready to create the names mentioned above.;
#X obj 18 218 r analog_res;
#X obj 18 312 t f b;
#X obj 18 334 until;
#X obj 18 378 f;
#X obj 48 378 + 1;
#X msg 36 355 0;
#X obj 18 400 t f f;
#X obj 18 240 t f f;
#X obj 18 262 + 1;
#X obj 50 422 /;
#X obj 18 290 t f f;
#X obj 50 444 pow 2;
#X obj 18 473 pack;
#X obj 18 496 array define exp_tab;
#X obj 155 307 array size exp_tab;
#X text 16 521 write an exponential table which is used for frequency
slopes;
#X text 115 218 <- this comes from [arduino_data] received from the
Teensy;
#X text 63 257 the value sent from the Teensy is the analog resolution
minus 1 (for example 1023 for 10-bits) for better table reading;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 4 0 11 0;
#X connect 5 0 6 0;
#X connect 5 1 9 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 7 0 10 0;
#X connect 8 0 7 1;
#X connect 9 0 7 1;
#X connect 10 0 16 0;
#X connect 10 1 13 0;
#X connect 11 0 12 0;
#X connect 11 1 13 1;
#X connect 12 0 14 0;
#X connect 13 0 15 0;
#X connect 14 0 5 0;
#X connect 14 1 18 0;
#X connect 15 0 16 1;
#X connect 16 0 17 0;
#X restore 42 103 pd init;
#X text 40 35 1st: module number \, starting from 0;
#X obj 41 162 tutorial_adc_dac_module~ 0 2 2;
#X obj 41 188 tutorial_oscillator_module~ 1 4 4;
#X obj 41 214 tutorial_filter_module~ 2 4 8;
#X obj 41 241 tutorial_lfo_module~ 3 3 4;
#X obj 41 269 tutorial_envelope_module~ 4 4 4;
#X obj 41 297 tutorial_vca_mixer_module~ 5 8 5;
#X restore 45 733 pd modules;
#X floatatom 91 583 5 0 0 0 - - -, f 5;
#X msg 91 602 baud \$1;
#N canvas 673 634 653 283 poweroff 0;
#X obj 45 129 spigot;
#N canvas 971 116 679 389 shut_down_script 0;
#X obj 100 268 shell;
#X obj 100 195 inlet;
#X obj 100 217 spigot;
#X obj 169 156 loadbang;
#X obj 169 178 del 1000;
#X msg 169 200 1;
#X text 201 198 a 1 second safety delay;
#X msg 100 244 poweroff;
#X text 166 244 running "sudo chmod a+s /sbin/poweroff" enables sudoers
to run "poweroff" without the use of "sudo" and a password;
#X text 79 77 This subpatch powers off the Pi. You can also create
some visual feedback (like blink an LED of the synthesizer) to denote
that the Pi is going for power off;
#X connect 1 0 2 0;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 2 1;
#X connect 7 0 0 0;
#X restore 45 200 pd shut_down_script;
#X obj 141 68 r pd;
#X obj 141 90 route dsp;
#X obj 141 112 == 0;
#X text 138 49 let the power off switch through only when the DSP is
off;
#N canvas 627 408 305 310 safety_mechanism 0;
#X obj 50 195 > 2000;
#X obj 50 28 inlet;
#X obj 50 262 outlet;
#X obj 50 100 f;
#X obj 80 100 + 1;
#X msg 65 75 0;
#X obj 50 123 sel 0 1;
#X obj 82 149 t b b;
#X obj 50 173 timer;
#N canvas 321 207 450 300 debounce 0;
#X obj 87 78 inlet;
#X obj 87 100 spigot 1;
#X obj 87 122 t a b;
#X obj 163 61 t b b;
#X obj 163 105 del 50;
#X msg 163 127 1;
#X msg 190 83 0;
#X obj 87 144 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 7 0;
#X connect 2 1 3 0;
#X connect 3 0 4 0;
#X connect 3 1 6 0;
#X connect 4 0 5 0;
#X connect 5 0 1 1;
#X connect 6 0 1 1;
#X restore 50 50 pd debounce;
#X obj 50 217 sel 1 0;
#X obj 73 240 outlet too_short;
#X connect 0 0 10 0;
#X connect 1 0 9 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 3 1;
#X connect 5 0 3 1;
#X connect 6 0 8 0;
#X connect 6 1 7 0;
#X connect 7 0 8 1;
#X connect 7 1 5 0;
#X connect 8 0 0 0;
#X connect 9 0 3 0;
#X connect 10 0 2 0;
#X connect 10 1 11 0;
#X restore 45 153 pd safety_mechanism;
#X obj 45 43 r shut_down;
#X text 188 153 bangs when the switch off button has been held for
a too short time \, you can utilize it to give some visual feedback
;
#X connect 0 0 6 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 0 1;
#X connect 6 0 1 0;
#X connect 7 0 0 0;
#X restore 45 760 pd poweroff;
#X text 186 633 <- various messages for the Arduino;
#X text 157 665 <- argument is serial port;
#X text 235 701 <- arguments are matrix ramp time and debounce time
(both default to 100);
#X obj 45 699 matrix_connections 100 100;
#X obj 45 666 arduino_data 0;
#X obj 42 405 declare -path ./generic_abstractions -path ./modules
;
#X text 40 79 This patch works only with the corresponding Arduino
sketch and the corresponding hardware (all the infrastructure of the
synthesizer \, plus the module circuit boards \, all connected properly).
Note that you need to have the Teensy connected otherwise the patch
won't work.;
#X text 40 154 Read the tutorial module abstractions (inside [pd modules])
and the Arduino sketch \, to understand how this setup works;
#X text 40 22 This is the patch for the modular synthesizer. In this
patch the tutorial module abstractions are used (in [pd modules]) \,
to demonstrate how this system works.;
#X text 39 192 Declare the path to the generic_abstractions and the
modules abstractions;
#X text 37 226 You should also declare the paths to the following external
libraries: zexy \, iemmatrix \, comport \, iemguts \, ggee \, list-abs
\, and tabreceive_mult~ (if list-abs is in the externals directory
in your Documents directory -which is very likely to be so- you don't
need to include it because all its abstractions have the "list-abs"
directory prepended \, e.g. [list-abs/list-drip]) \; For zexy and iemmatrix
you should also include the flag -lib to load the library \; This is
not included here because it is system specific and relative paths
cannot be used since these libraries are not shipped with the patches
of this project;
#X connect 2 0 17 0;
#X connect 5 0 17 0;
#X connect 6 0 17 0;
#X connect 7 0 17 0;
#X connect 8 0 17 0;
#X connect 10 0 11 0;
#X connect 11 0 17 0;
