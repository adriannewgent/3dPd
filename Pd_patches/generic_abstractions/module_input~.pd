#N canvas 967 165 801 554 10;
#X obj 28 360 outlet~;
#X obj 28 80 loadbang;
#X obj 28 149 pack s \$1;
#X obj 28 102 canvasdollarzero 1;
#X obj 28 278 oreceive;
#X msg 28 170 symbol \$1-input\$2;
#X obj 28 192 oreceive;
#X text 97 194 receive the name of the receive from [module_data];
#X obj 28 337 tabreceive_mult~;
#N canvas 78 367 879 550 set_tables 0;
#X text 79 227 here we receive outlet number and connection state;
#X obj 29 107 route 1 0;
#N canvas 1007 421 606 361 grow_list 0;
#X obj 133 47 inlet;
#X obj 40 41 sel 1;
#X obj 40 205 list split 2;
#X obj 53 237 list;
#X obj 40 281 t b l;
#X obj 53 259 route bang;
#X obj 67 304 outlet;
#X obj 133 69 t b l;
#X msg 133 91 1;
#X obj 40 108 spigot;
#X obj 40 130 t b b;
#X msg 108 121 0;
#X text 170 89 let through only if at least one list comes through
while the patching update is disabled;
#X obj 40 19 r update_patching;
#X obj 40 154 list;
#X obj 40 176 t l b b;
#N canvas 386 156 624 449 check_and_grow 0;
#X text 23 8 in case of stacked connections \, while the patching update
is deactivated we'll might want to remove the connection at the bottom
of the stack. in this case we'll have to remove the top connection
\, then the bottom \, and then reposition the top connection. in here
we check if a connection to an outlet already exists and if so \, we'll
replace the last connection state arrived. if we omit this \, in the
case mentioned above \, all connections will be made \, but after the
cross-fade ramp has ended \, the top connection (the one repositioned)
will be removed from [tabreceive_mult~].;
#X obj 69 187 inlet;
#X obj 208 187 inlet;
#X obj 130 231 unpack;
#X obj 130 253 list-abs/list-find;
#X obj 69 316 list-abs/list-replace;
#X obj 235 275 t f f;
#X obj 69 292 spigot;
#X obj 229 323 spigot;
#X obj 69 214 t l l l;
#X obj 208 229 t a a;
#X obj 229 349 list-abs/list-extend;
#X obj 346 326 t b b;
#X obj 262 299 == 0;
#X obj 229 371 t l l;
#X obj 69 338 outlet;
#X connect 1 0 9 0;
#X connect 2 0 10 0;
#X connect 3 0 4 0;
#X connect 4 0 5 1;
#X connect 4 1 6 0;
#X connect 5 0 15 0;
#X connect 6 0 7 1;
#X connect 6 1 13 0;
#X connect 7 0 5 0;
#X connect 8 0 11 0;
#X connect 9 0 7 0;
#X connect 9 1 8 0;
#X connect 9 2 3 0;
#X connect 10 0 5 2;
#X connect 10 1 4 1;
#X connect 11 0 14 0;
#X connect 12 0 11 1;
#X connect 12 1 10 0;
#X connect 13 0 8 1;
#X connect 14 0 15 0;
#X connect 14 1 10 0;
#X restore 160 137 pd check_and_grow;
#X connect 0 0 7 0;
#X connect 1 0 9 0;
#X connect 2 0 4 0;
#X connect 2 1 3 1;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 4 1 6 0;
#X connect 5 1 2 0;
#X connect 7 0 8 0;
#X connect 7 1 16 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 10 0 14 0;
#X connect 10 1 11 0;
#X connect 11 0 9 1;
#X connect 13 0 1 0;
#X connect 14 0 15 0;
#X connect 15 0 2 0;
#X connect 15 1 14 1;
#X connect 15 2 16 1;
#X connect 16 0 14 1;
#X restore 54 130 pd grow_list;
#X text 103 98 if the patching update is disabled \, we store the incoming
messages and output them all together;
#X obj 29 85 list trim;
#X obj 29 63 list prepend 0;
#X obj 29 41 inlet;
#X obj 110 41 r update_patching;
#X obj 29 499 outlet;
#X obj 62 252 t f f;
#X obj 29 282 t f f;
#X obj 566 32 r mtx_ramp;
#X obj 654 15 r matrix_ramp_time;
#X obj 566 76 t b;
#X obj 654 37 t f f;
#X msg 195 369 remove output\$1;
#X obj 566 123 s \$0-ramp;
#X obj 240 324 r \$0-ramp;
#X obj 29 346 pack f f f;
#X obj 86 324 r \$0-ramp;
#X msg 29 369 set output\$1 \$2 \$3;
#X text 564 145 set the global ramp time locally;
#X text 192 392 when a connection goes to 0 \, after the ramp we remove
the table from [tabreceive_mult~]'s buffer;
#X obj 29 179 t l l;
#X obj 29 222 unpack;
#X obj 144 196 outlet to_metadata_handling;
#X obj 566 98 100;
#X obj 566 54 moses 100;
#X obj 195 299 spigot;
#X obj 228 269 == 0;
#X obj 195 346 pipe 100;
#X connect 1 0 23 0;
#X connect 1 1 2 0;
#X connect 2 0 23 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 5 1;
#X connect 9 0 18 1;
#X connect 9 1 29 0;
#X connect 10 0 18 0;
#X connect 10 1 28 0;
#X connect 11 0 27 0;
#X connect 12 0 14 0;
#X connect 13 0 26 0;
#X connect 14 0 27 1;
#X connect 14 1 26 0;
#X connect 15 0 8 0;
#X connect 17 0 30 1;
#X connect 18 0 20 0;
#X connect 19 0 18 2;
#X connect 20 0 8 0;
#X connect 23 0 24 0;
#X connect 23 1 25 0;
#X connect 24 0 10 0;
#X connect 24 1 9 0;
#X connect 26 0 16 0;
#X connect 27 0 13 0;
#X connect 27 1 16 0;
#X connect 28 0 30 0;
#X connect 29 0 28 1;
#X connect 30 0 15 0;
#X restore 28 314 pd set_tables;
#X text 24 8 this abstraction takes the matrix messages concerning
this input and sets the connecting or disconnecting tables to [tabreceive_mult~]
and takes care of removing the disconnecting tables;
#X msg 537 255 symbol get_metadata\$1;
#X obj 537 277 oreceive;
#X obj 537 465 outlet metadata;
#X text 96 276 this [r ] listens to this inlet number receiving outlet
nr and connection state lists from [matrix_connections];
#X msg 28 253 symbol input\$1;
#X obj 28 214 t f f f;
#X obj 28 124 t s s;
#N canvas 461 487 363 220 link_metadata 0;
#X obj 176 69 symbol \$2;
#X obj 176 91 sel metalink;
#X msg 176 113 1;
#X obj 32 154 spigot;
#X obj 32 28 inlet;
#X obj 176 137 t f f;
#X obj 203 176 outlet link_state;
#N canvas 61 336 658 526 get_all_links 0;
#X obj 63 80 inlet;
#X msg 63 102 8;
#X obj 63 169 until;
#X obj 63 221 f;
#X obj 93 221 + 1;
#X msg 81 198 0;
#X obj 63 243 route 0 1 2 3 4 5 6 7;
#X obj 63 375 \$3;
#X obj 100 331 \$4;
#X obj 100 353 sel 0;
#X obj 100 375 s \$0-stop;
#X obj 90 147 r \$0-stop;
#X obj 63 124 t f b;
#X obj 63 420 list-abs/list-extend;
#X obj 170 353 sel 0;
#X obj 170 375 s \$0-stop;
#X obj 240 353 sel 0;
#X obj 240 375 s \$0-stop;
#X obj 310 353 sel 0;
#X obj 310 375 s \$0-stop;
#X obj 380 353 sel 0;
#X obj 380 375 s \$0-stop;
#X obj 450 353 sel 0;
#X obj 450 375 s \$0-stop;
#X obj 520 353 sel 0;
#X obj 520 375 s \$0-stop;
#X obj 170 331 \$5;
#X obj 240 331 \$6;
#X obj 310 331 \$7;
#X obj 380 331 \$8;
#X obj 450 331 \$9;
#X obj 520 331 \$10;
#X text 67 11 since we can have up to 8 outputs \, we can use up to
that many arguments for linking an input's metadata. only the first
link argument can be zero. the first 0 argument found after that will
denote the end of linking outputs;
#X obj 63 442 outlet;
#X connect 0 0 1 0;
#X connect 1 0 12 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 3 1;
#X connect 5 0 3 1;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 6 2 26 0;
#X connect 6 3 27 0;
#X connect 6 4 28 0;
#X connect 6 5 29 0;
#X connect 6 6 30 0;
#X connect 6 7 31 0;
#X connect 7 0 13 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 9 1 13 0;
#X connect 11 0 2 1;
#X connect 12 0 2 0;
#X connect 12 1 5 0;
#X connect 13 0 33 0;
#X connect 14 0 15 0;
#X connect 14 1 13 0;
#X connect 16 0 17 0;
#X connect 16 1 13 0;
#X connect 18 0 19 0;
#X connect 18 1 13 0;
#X connect 20 0 21 0;
#X connect 20 1 13 0;
#X connect 22 0 23 0;
#X connect 22 1 13 0;
#X connect 24 0 25 0;
#X connect 24 1 13 0;
#X connect 26 0 14 0;
#X connect 27 0 16 0;
#X connect 28 0 18 0;
#X connect 29 0 20 0;
#X connect 30 0 22 0;
#X connect 31 0 24 0;
#X restore 32 82 pd get_all_links;
#X obj 32 52 t b b;
#X obj 32 176 outlet links;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 9 0;
#X connect 4 0 8 0;
#X connect 5 0 3 1;
#X connect 5 1 6 0;
#X connect 7 0 3 0;
#X connect 8 0 7 0;
#X connect 8 1 0 0;
#X restore 631 165 pd link_metadata;
#X obj 564 394 spigot;
#N canvas 573 331 439 568 split_metadata 0;
#X obj 106 435 list;
#X obj 27 79 inlet;
#X obj 220 276 t b b;
#X msg 220 298 symbol done;
#X obj 106 457 list split 2;
#X obj 106 511 outlet;
#X obj 27 259 list split 2;
#X obj 106 321 list;
#X obj 27 281 unpack;
#X obj 106 298 t b f;
#X obj 106 343 list split;
#X obj 27 238 list;
#X obj 27 211 until;
#X obj 106 365 t b l;
#X obj 106 387 until;
#X obj 106 479 list trim;
#X text 22 16 here we can receive multiple lists concatenated and split
their data according to their second element \, which is the number
of metadata each list contains;
#X obj 27 101 t a a;
#X obj 27 189 t b a;
#X obj 60 122 list length;
#X obj 60 144 > 0;
#X obj 27 166 spigot;
#X connect 0 0 4 0;
#X connect 1 0 17 0;
#X connect 2 0 3 0;
#X connect 2 1 12 1;
#X connect 3 0 5 0;
#X connect 4 0 15 0;
#X connect 4 1 0 1;
#X connect 4 2 14 1;
#X connect 6 0 8 0;
#X connect 6 1 7 1;
#X connect 6 2 2 0;
#X connect 7 0 10 0;
#X connect 8 1 9 0;
#X connect 9 0 7 0;
#X connect 9 1 10 1;
#X connect 10 0 13 0;
#X connect 10 1 11 1;
#X connect 11 0 6 0;
#X connect 12 0 11 0;
#X connect 13 0 14 0;
#X connect 13 1 0 1;
#X connect 14 0 0 0;
#X connect 15 0 5 0;
#X connect 17 0 21 0;
#X connect 17 1 19 0;
#X connect 18 0 12 0;
#X connect 18 1 11 1;
#X connect 19 0 20 0;
#X connect 20 0 21 1;
#X connect 21 0 18 0;
#X restore 537 441 pd split_metadata;
#X obj 537 299 t l l;
#X obj 510 347 oreceive;
#X msg 510 325 symbol clear_metadata\$1;
#X obj 510 231 t f f;
#N canvas 1150 406 603 455 get_clear_metadata 0;
#X obj 30 63 unpack;
#X obj 30 300 spigot;
#X obj 30 324 t b f;
#X obj 30 412 s;
#X obj 91 333 inlet input_nr;
#X obj 30 372 f;
#X obj 30 39 inlet;
#X obj 63 87 t f f;
#X obj 121 104 == 0;
#X obj 88 127 spigot;
#X obj 30 110 t f f;
#X text 145 138 in case of metadata linking \, notify the linked outlet
of the disconnection so the metadata can be cleared;
#X obj 115 194 outlet clear_metadata;
#X text 82 300 in case of a connection ask for the output's metadata
;
#X msg 57 395 symbol give_metadata\$1;
#X obj 91 355 t f f;
#X obj 88 244 f;
#X obj 88 149 t f f;
#X obj 88 221 t b f;
#X obj 88 272 s;
#X msg 115 255 symbol erase_metadata\$1;
#X msg 115 172 disconnect \$1;
#X text 134 224 in case of a disconnection as for the metadata to be
cleared;
#X connect 0 0 10 0;
#X connect 0 1 7 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 2 1 14 0;
#X connect 4 0 15 0;
#X connect 5 0 3 0;
#X connect 6 0 0 0;
#X connect 7 0 1 1;
#X connect 7 1 8 0;
#X connect 8 0 9 1;
#X connect 9 0 17 0;
#X connect 10 0 1 0;
#X connect 10 1 9 0;
#X connect 14 0 3 1;
#X connect 15 0 5 1;
#X connect 15 1 16 1;
#X connect 16 0 19 0;
#X connect 17 0 18 0;
#X connect 17 1 21 0;
#X connect 18 0 16 0;
#X connect 18 1 20 0;
#X connect 20 0 19 1;
#X connect 21 0 12 0;
#X restore 342 331 pd get_clear_metadata;
#N canvas 377 325 383 280 send_linked_metadata 0;
#X obj 43 30 inlet;
#X obj 74 138 list;
#X obj 95 30 inlet links;
#X obj 74 160 list-abs/list-drip;
#X obj 49 79 list;
#X obj 201 30 inlet dollarzero;
#X obj 156 205 pack f s;
#X msg 156 227 symbol \$2-metalink\$1;
#X obj 49 244 s;
#X obj 74 188 t b f;
#X obj 43 52 t b a;
#X obj 49 101 list trim;
#X connect 0 0 10 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 0 9 0;
#X connect 4 0 11 0;
#X connect 5 0 6 1;
#X connect 6 0 7 0;
#X connect 7 0 8 1;
#X connect 9 0 4 0;
#X connect 9 1 6 0;
#X connect 10 0 1 0;
#X connect 10 1 4 1;
#X connect 11 0 8 0;
#X restore 564 416 pd send_linked_metadata;
#X obj 631 141 t b s;
#X connect 1 0 3 0;
#X connect 2 0 5 0;
#X connect 3 0 17 0;
#X connect 4 0 9 0;
#X connect 5 0 6 0;
#X connect 6 0 16 0;
#X connect 8 0 0 0;
#X connect 9 0 8 0;
#X connect 9 1 25 0;
#X connect 11 0 12 0;
#X connect 12 0 21 0;
#X connect 15 0 4 0;
#X connect 16 0 15 0;
#X connect 16 1 25 1;
#X connect 16 2 24 0;
#X connect 17 0 2 0;
#X connect 17 1 27 0;
#X connect 18 0 26 1;
#X connect 18 1 19 1;
#X connect 19 0 26 0;
#X connect 20 0 13 0;
#X connect 21 0 20 0;
#X connect 21 1 19 0;
#X connect 22 0 20 0;
#X connect 23 0 22 0;
#X connect 24 0 23 0;
#X connect 24 1 11 0;
#X connect 25 0 19 0;
#X connect 27 0 18 0;
#X connect 27 1 26 2;
