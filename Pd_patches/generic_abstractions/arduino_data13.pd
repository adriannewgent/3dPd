#N canvas 737 141 663 602 10;
#X obj 27 40 inlet;
#X msg 27 108 open \$1;
#X msg 74 86 close;
#X msg 121 86 devicename \$1;
#X obj 27 371 select 255;
#X text 105 368 0xff denotes the beginning of the data stream;
#X obj 27 463 t b b b b;
#X obj 152 237 route open;
#X obj 167 131 loadbang;
#X msg 167 153 info;
#X obj 239 215 spigot 1;
#X obj 167 175 t a b;
#X obj 239 192 del 100;
#X msg 304 198 0;
#X text 213 155 send "info" message repetedly until you retrieve the
"open" state;
#X obj 152 259 sel 1;
#X obj 27 220 comport \$1 57600;
#N canvas 1001 297 775 466 route_data 0;
#X obj 31 127 inlet;
#X obj 56 298 spigot;
#X obj 50 172 spigot 1;
#X obj 56 321 swap;
#X obj 56 343 pack;
#X obj 56 365 route 0 1;
#X obj 89 276 r \$0-route_all_data;
#X obj 95 127 r \$0-route_all_data;
#X obj 283 222 s \$0-route_all_data;
#X obj 95 149 == 0;
#X obj 50 215 1;
#X obj 283 200 0;
#X obj 50 237 s \$0-route_all_data;
#X obj 50 194 t b f;
#X obj 283 125 spigot;
#X obj 316 101 1;
#X obj 355 108 0;
#X obj 283 147 t b b;
#X obj 316 78 r \$0-pots_done;
#X obj 294 171 r \$0-reset_main_router;
#X obj 31 149 t b f f;
#X text 306 25 when pots are done \, we're waiting for the last byte
to trigger the [spigot] reset because of bottom-to-top execution order
;
#X obj 56 414 outlet generic_data;
#X obj 240 414 outlet module_data;
#X connect 0 0 20 0;
#X connect 1 0 3 0;
#X connect 2 0 13 0;
#X connect 3 0 4 0;
#X connect 3 1 4 1;
#X connect 4 0 5 0;
#X connect 5 0 22 0;
#X connect 5 1 23 0;
#X connect 6 0 1 1;
#X connect 7 0 9 0;
#X connect 9 0 2 1;
#X connect 10 0 12 0;
#X connect 11 0 8 0;
#X connect 13 0 10 0;
#X connect 13 1 3 1;
#X connect 14 0 17 0;
#X connect 15 0 14 1;
#X connect 16 0 14 1;
#X connect 17 0 11 0;
#X connect 17 1 16 0;
#X connect 18 0 15 0;
#X connect 19 0 11 0;
#X connect 20 0 14 0;
#X connect 20 1 2 0;
#X connect 20 2 1 0;
#X restore 165 388 pd route_data;
#N canvas 1017 289 751 726 ardu_messages 0;
#X obj 372 255 list prepend;
#X obj 19 345 list;
#X obj 273 523 list prepend;
#X obj 273 545 t l l;
#X obj 248 568 list;
#X obj 19 461 t b f;
#X msg 46 483 symbol buffer_free\$1;
#X obj 19 500 s;
#X obj 248 656 outlet;
#X obj 19 278 spigot;
#X obj 298 238 t b f;
#X msg 298 261 1;
#X obj 19 300 t b b;
#X msg 52 255 0;
#X obj 221 453 t b b;
#X text 226 128 let the serial buffer clear first;
#X obj 273 499 r ardu_mess;
#X text 302 657 send the concatenated list to the Teensy with start
and end characters;
#X obj 248 590 list prepend 60;
#X obj 248 612 list append 62;
#X text 365 590 ASCII <;
#X text 356 613 ASCII >;
#X obj 286 166 r module_active;
#X text 401 167 receive the active module index;
#X obj 286 188 t f f;
#X obj 298 214 f;
#X obj 391 382 sel 0;
#X obj 372 328 t l l l;
#X text 343 404 since a module can have more than one LEDs \, or more
than one generic data could be sent (with the generic index 0) \, we
must check if the incoming index has been already stored. if it is
not found \, store it;
#X obj 153 436 t b b b;
#X text 358 499 concatenate the various messages into one list;
#X text 24 366 store indexes of active modules;
#X text 16 520 trigger the active modules;
#X text 67 298 let the bang through only when at least one message
for the Arduino is ready to be sent;
#X obj 19 151 spigot 1;
#X obj 19 69 metro 10;
#X obj 19 16 loadbang;
#X text 88 99 poll the available messages;
#X obj 19 419 list-abs/list-drip;
#X obj 286 358 list-abs/list-find;
#X obj 248 634 list trim;
#X obj 64 127 r \$0-serial_buffer_clear;
#X obj 91 16 r pd;
#X obj 91 38 route dsp;
#X obj 27 117 bang~;
#X connect 0 0 27 0;
#X connect 1 0 38 0;
#X connect 2 0 3 0;
#X connect 3 0 4 1;
#X connect 3 1 2 1;
#X connect 4 0 18 0;
#X connect 5 0 7 0;
#X connect 5 1 6 0;
#X connect 6 0 7 1;
#X connect 9 0 12 0;
#X connect 10 0 11 0;
#X connect 10 1 0 0;
#X connect 11 0 9 1;
#X connect 12 0 1 0;
#X connect 12 1 13 0;
#X connect 13 0 9 1;
#X connect 14 0 2 1;
#X connect 14 1 4 0;
#X connect 16 0 2 0;
#X connect 18 0 19 0;
#X connect 19 0 40 0;
#X connect 22 0 24 0;
#X connect 24 0 39 0;
#X connect 24 1 25 1;
#X connect 25 0 10 0;
#X connect 26 0 25 0;
#X connect 27 0 1 1;
#X connect 27 1 39 1;
#X connect 27 2 0 1;
#X connect 29 0 0 1;
#X connect 29 1 39 1;
#X connect 29 2 14 0;
#X connect 34 0 9 0;
#X connect 35 0 34 0;
#X connect 36 0 35 0;
#X connect 38 0 5 0;
#X connect 38 1 29 0;
#X connect 39 1 26 0;
#X connect 40 0 8 0;
#X connect 41 0 34 1;
#X connect 42 0 43 0;
#X connect 43 0 35 0;
#X connect 44 0 34 0;
#X restore 152 328 pd ardu_messages;
#N canvas 689 427 634 230 query_data_and_reset 0;
#X obj 49 92 inlet;
#X obj 49 136 outlet;
#X text 46 33 the following message occurs as soon as the patch opens
\, so we don't need to wait for the serial buffer to be freed;
#X msg 49 114 60 105 98 114 62;
#X text 174 112 ASCII < \, i \, b \, r \, and > for number of inputs/outputs
\, analog pin resolution \, and resetting connections and switches
states. < and > are start and end characters of messages;
#X connect 0 0 3 0;
#X connect 3 0 1 0;
#X restore 152 304 pd query_data_and_reset;
#X obj 152 282 t b b;
#X obj 27 62 route float close symbol;
#N canvas 921 82 557 208 pots_and_switches 0;
#X obj 49 42 inlet;
#N canvas 506 243 777 665 pots 0;
#X obj 66 48 inlet;
#X obj 66 70 t b f;
#X obj 96 142 + 1;
#X msg 81 108 0;
#X obj 66 192 pack;
#X msg 158 570 symbol module\$1;
#X obj 66 587 s;
#X obj 66 386 repack;
#X obj 66 534 list prepend pots;
#X obj 66 289 * 128;
#X obj 66 313 +;
#X obj 66 164 t f f;
#X obj 66 556 list trim;
#X obj 119 84 r \$0-pots_done;
#X obj 117 456 s \$0-pots_done;
#X obj 66 408 spigot;
#X obj 253 331 r \$0-close_spigots;
#X msg 253 353 0;
#X obj 288 369 r \$0-open_spigots;
#X msg 288 391 1;
#X obj 76 354 r \$0-clear_repacks;
#X obj 83 506 outlet;
#X obj 66 432 t a b b b;
#X obj 100 480 s \$0-reset_main_router;
#X text 273 480 pots MUST reset main router as well due to more than
one module pot values arriving all with a single start character;
#X obj 66 214 route 3 2 1 0 -1 -2 -3;
#N canvas 1 82 499 375 bug13 0;
#X obj 24 172 *;
#X obj 24 194 sel 0;
#X obj 97 152 == 10;
#X obj 24 286 f;
#X text 25 21 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 97 269 13;
#X obj 97 239 sel 1;
#X obj 24 328 outlet fixed_value;
#X obj 42 113 inlet value;
#X obj 24 84 inlet 13bug_fix;
#X obj 42 135 t f f;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 7 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 5 0 3 1;
#X connect 6 0 5 0;
#X connect 6 1 3 1;
#X connect 8 0 10 0;
#X connect 9 0 0 0;
#X connect 10 0 0 1;
#X connect 10 1 2 0;
#X restore 158 242 pd bug13;
#N canvas 1 82 499 375 bug13 0;
#X obj 24 172 *;
#X obj 24 194 sel 0;
#X obj 97 152 == 10;
#X obj 24 286 f;
#X text 25 21 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 97 269 13;
#X obj 97 239 sel 1;
#X obj 24 328 outlet fixed_value;
#X obj 42 113 inlet value;
#X obj 24 84 inlet 13bug_fix;
#X obj 42 135 t f f;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 7 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 5 0 3 1;
#X connect 6 0 5 0;
#X connect 6 1 3 1;
#X connect 8 0 10 0;
#X connect 9 0 0 0;
#X connect 10 0 0 1;
#X connect 10 1 2 0;
#X restore 102 242 pd bug13;
#N canvas 1 82 499 375 bug13 0;
#X obj 24 172 *;
#X obj 24 194 sel 0;
#X obj 97 152 == 10;
#X obj 24 286 f;
#X text 25 21 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 97 269 13;
#X obj 97 239 sel 1;
#X obj 24 328 outlet fixed_value;
#X obj 42 113 inlet value;
#X obj 24 84 inlet 13bug_fix;
#X obj 42 135 t f f;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 7 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 5 0 3 1;
#X connect 6 0 5 0;
#X connect 6 1 3 1;
#X connect 8 0 10 0;
#X connect 9 0 0 0;
#X connect 10 0 0 1;
#X connect 10 1 2 0;
#X restore 66 265 pd bug13;
#X msg 119 108 -3;
#X obj 66 142 -3;
#X obj 159 181 sel 3;
#X connect 0 0 1 0;
#X connect 1 0 30 0;
#X connect 1 1 4 1;
#X connect 2 0 30 1;
#X connect 3 0 30 1;
#X connect 4 0 25 0;
#X connect 5 0 6 1;
#X connect 7 0 15 0;
#X connect 8 0 12 0;
#X connect 9 0 10 0;
#X connect 10 0 7 0;
#X connect 11 0 4 0;
#X connect 11 1 31 0;
#X connect 12 0 6 0;
#X connect 13 0 29 0;
#X connect 15 0 22 0;
#X connect 16 0 17 0;
#X connect 17 0 15 1;
#X connect 18 0 19 0;
#X connect 19 0 15 1;
#X connect 20 0 7 0;
#X connect 22 0 8 0;
#X connect 22 1 21 0;
#X connect 22 2 23 0;
#X connect 22 3 14 0;
#X connect 25 0 28 0;
#X connect 25 1 28 1;
#X connect 25 2 27 0;
#X connect 25 3 27 1;
#X connect 25 4 7 1;
#X connect 25 5 26 0;
#X connect 25 6 26 1;
#X connect 26 0 5 0;
#X connect 27 0 10 1;
#X connect 28 0 9 0;
#X connect 29 0 30 1;
#X connect 30 0 2 0;
#X connect 30 0 11 0;
#X connect 31 0 3 0;
#X restore 49 92 pd pots;
#N canvas 573 215 707 744 switches 0;
#X obj 39 322 until;
#X obj 39 430 f;
#X obj 39 455 &;
#X obj 39 251 +;
#X obj 39 226 * 128;
#X obj 39 297 f;
#X obj 39 477 != 0;
#X obj 39 9 inlet;
#X obj 39 31 t b f;
#X obj 69 108 + 1;
#X obj 39 132 pack;
#X msg 131 681 symbol module\$1;
#X obj 39 108 f;
#X msg 78 78 0;
#X obj 39 558 repack;
#X obj 39 654 list prepend switches;
#X obj 39 676 list trim;
#X obj 39 698 s;
#X obj 39 273 t b f;
#X obj 100 374 swap 1;
#X obj 100 396 <<;
#X obj 78 55 r \$0-switches_done;
#X obj 66 624 s \$0-switches_done;
#X obj 39 580 spigot;
#X obj 232 503 r \$0-close_spigots;
#X msg 232 525 0;
#X obj 267 541 r \$0-open_spigots;
#X msg 267 563 1;
#X obj 39 602 t a b;
#X obj 71 430 * 2;
#X text 104 430 increse by a power of two;
#X text 151 371 start spliting bits from the pin number the first switch
is attached to (this replaces raising 2 to the incoming power);
#X obj 39 154 route 7 6 5 4 3 2 1 0;
#N canvas 1 82 499 375 bug13 0;
#X obj 24 172 *;
#X obj 24 194 sel 0;
#X obj 97 152 == 10;
#X obj 24 286 f;
#X text 25 21 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 97 269 13;
#X obj 97 239 sel 1;
#X obj 24 328 outlet fixed_value;
#X obj 42 113 inlet value;
#X obj 24 84 inlet 13bug_fix;
#X obj 42 135 t f f;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 7 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 5 0 3 1;
#X connect 6 0 5 0;
#X connect 6 1 3 1;
#X connect 8 0 10 0;
#X connect 9 0 0 0;
#X connect 10 0 0 1;
#X connect 10 1 2 0;
#X restore 131 182 pd bug13;
#X obj 115 280 t f f;
#N canvas 1 82 499 375 bug13 0;
#X obj 24 172 *;
#X obj 24 194 sel 0;
#X obj 97 152 == 10;
#X obj 24 286 f;
#X text 25 21 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 97 269 13;
#X obj 97 239 sel 1;
#X obj 24 328 outlet fixed_value;
#X obj 42 113 inlet value;
#X obj 24 84 inlet 13bug_fix;
#X obj 42 135 t f f;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 7 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 5 0 3 1;
#X connect 6 0 5 0;
#X connect 6 1 3 1;
#X connect 8 0 10 0;
#X connect 9 0 0 0;
#X connect 10 0 0 1;
#X connect 10 1 2 0;
#X restore 69 182 pd bug13;
#N canvas 1 82 499 375 bug13 0;
#X obj 24 172 *;
#X obj 24 194 sel 0;
#X obj 97 152 == 10;
#X obj 24 286 f;
#X text 25 21 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 97 269 13;
#X obj 97 239 sel 1;
#X obj 24 328 outlet fixed_value;
#X obj 42 113 inlet value;
#X obj 24 84 inlet 13bug_fix;
#X obj 42 135 t f f;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 7 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 5 0 3 1;
#X connect 6 0 5 0;
#X connect 6 1 3 1;
#X connect 8 0 10 0;
#X connect 9 0 0 0;
#X connect 10 0 0 1;
#X connect 10 1 2 0;
#X restore 39 202 pd bug13;
#X text 207 115 incoming bytes are module index (with the 13 bug fix)
\, number of switches of current module \, number of pin the first
switch is wired to \, and input chip byte (split in two \, with the
13 bug fixes);
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 29 0;
#X connect 2 0 6 0;
#X connect 3 0 18 0;
#X connect 4 0 3 0;
#X connect 5 0 0 0;
#X connect 6 0 14 0;
#X connect 7 0 8 0;
#X connect 8 0 12 0;
#X connect 8 1 10 1;
#X connect 9 0 12 1;
#X connect 10 0 32 0;
#X connect 11 0 17 1;
#X connect 12 0 9 0;
#X connect 12 0 10 0;
#X connect 13 0 12 1;
#X connect 14 0 23 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 18 0 5 0;
#X connect 18 1 2 1;
#X connect 19 0 20 0;
#X connect 19 1 20 1;
#X connect 20 0 1 1;
#X connect 21 0 13 0;
#X connect 23 0 28 0;
#X connect 24 0 25 0;
#X connect 25 0 23 1;
#X connect 26 0 27 0;
#X connect 27 0 23 1;
#X connect 28 0 15 0;
#X connect 28 1 22 0;
#X connect 29 0 1 1;
#X connect 32 0 36 0;
#X connect 32 1 36 1;
#X connect 32 2 35 0;
#X connect 32 3 35 1;
#X connect 32 4 19 0;
#X connect 32 5 34 0;
#X connect 32 6 33 0;
#X connect 32 7 33 1;
#X connect 33 0 11 0;
#X connect 34 0 5 1;
#X connect 34 1 14 1;
#X connect 35 0 3 1;
#X connect 36 0 4 0;
#X restore 124 92 pd switches;
#N canvas 978 82 726 446 route_data 0;
#X obj 27 107 inlet;
#X obj 325 76 inlet;
#X obj 52 279 spigot;
#X obj 46 152 spigot 1;
#X obj 52 303 swap;
#X obj 52 325 pack;
#X obj 52 347 route 0 1;
#X obj 90 257 r \$0-route_mod_data;
#X obj 91 107 r \$0-route_mod_data;
#X obj 240 386 outlet switch_data;
#X obj 52 386 outlet pots_data;
#X obj 91 129 == 0;
#X obj 46 197 1;
#X obj 46 219 s \$0-route_mod_data;
#X obj 46 174 t b f;
#X obj 292 197 0;
#X obj 292 122 spigot;
#X obj 325 98 1;
#X obj 364 105 0;
#X obj 292 144 t b b;
#X obj 303 168 r \$0-reset_main_router;
#X obj 292 219 s \$0-route_mod_data;
#X obj 27 129 t b f f;
#X text 288 20 when pots are done \, we're waiting for the last byte
to trigger the [spigot] reset because of bottom-to-top execution order
;
#X connect 0 0 22 0;
#X connect 1 0 17 0;
#X connect 2 0 4 0;
#X connect 3 0 14 0;
#X connect 4 0 5 0;
#X connect 4 1 5 1;
#X connect 5 0 6 0;
#X connect 6 0 10 0;
#X connect 6 1 9 0;
#X connect 7 0 2 1;
#X connect 8 0 11 0;
#X connect 11 0 3 1;
#X connect 12 0 13 0;
#X connect 14 0 12 0;
#X connect 14 1 4 1;
#X connect 15 0 21 0;
#X connect 16 0 19 0;
#X connect 17 0 16 1;
#X connect 18 0 16 1;
#X connect 19 0 15 0;
#X connect 19 1 18 0;
#X connect 20 0 15 0;
#X connect 22 0 16 0;
#X connect 22 1 3 0;
#X connect 22 2 2 0;
#X restore 49 68 pd route_data;
#X text 46 120 pots MUST reset their own router \, because potentiometers
all arrive together \, from all active modules \, and no start character
(255) is printed in between the module pot values;
#X connect 0 0 3 0;
#X connect 1 0 3 1;
#X connect 3 0 1 0;
#X connect 3 1 2 0;
#X restore 240 416 pd pots_and_switches;
#N canvas 141 401 700 392 generic_data 0;
#X obj 25 122 repack;
#X obj 25 144 spigot;
#X obj 25 166 t l b;
#X obj 77 236 s shut_down;
#X obj 25 190 route 0 1 2 3 4;
#X text 299 195 data that are not routed to module abstractions are
being groupped under the "generic_data" symbol and diffused with an
extra index \, a 0 for the analog pins resolution \, a 1 for the connections
data \, a 2 for the total number of inputs and outputs so that the
matrix can be created \, a 3 for shutting the system down \, and a
4 for the availability of the serial buffer of the Teensy (a simulation
actually \, so that all outgoing messages waiting to be processed are
first processed and the more messages can go in the buffer);
#X obj 25 19 inlet data;
#N canvas 633 413 524 374 route_data 0;
#X obj 29 107 inlet;
#X obj 305 86 inlet;
#X obj 68 316 outlet data;
#X obj 272 198 s \$0-route_gen_data;
#X obj 240 316 outlet num_data;
#X obj 272 176 0;
#X obj 272 133 spigot;
#X obj 305 109 1;
#X obj 344 116 0;
#X obj 272 155 t b b;
#X obj 68 278 spigot;
#X obj 48 152 spigot 1;
#X obj 93 129 == 0;
#X obj 48 195 1;
#X obj 48 174 t b f;
#X obj 29 129 t b f f;
#X obj 93 107 r \$0-route_gen_data;
#X obj 48 217 s \$0-route_gen_data;
#X obj 101 256 r \$0-route_gen_data;
#X text 31 22 due to depth first execution order in Pd \, the last
incoming byte will be received after the right inlet receives a bang.
for this reason we must use the technique below to reset the [spigot]s
in this subpatch;
#X connect 0 0 15 0;
#X connect 1 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 9 0;
#X connect 7 0 6 1;
#X connect 8 0 6 1;
#X connect 9 0 5 0;
#X connect 9 1 8 0;
#X connect 10 0 2 0;
#X connect 11 0 14 0;
#X connect 12 0 11 1;
#X connect 13 0 17 0;
#X connect 14 0 13 0;
#X connect 14 1 4 0;
#X connect 15 0 6 0;
#X connect 15 1 11 0;
#X connect 15 2 10 0;
#X connect 16 0 12 0;
#X connect 18 0 10 1;
#X restore 25 46 pd route_data;
#X obj 173 105 r \$0-close_spigots;
#X msg 173 127 0;
#X obj 208 143 r \$0-open_spigots;
#X obj 36 78 r \$0-clear_repacks;
#X msg 208 165 1;
#X obj 94 213 s \$0-serial_buffer_clear;
#N canvas 1 81 450 300 analog_res 0;
#X obj 25 161 +;
#X obj 95 144 * 128;
#X obj 25 183 s analog_res;
#X obj 25 87 unpack f f f f;
#N canvas 1 82 499 375 bug13 0;
#X obj 46 187 t f f;
#X obj 181 159 *;
#X obj 181 181 sel 0;
#X obj 254 204 == 10;
#X obj 181 273 f;
#X obj 199 120 inlet 13_bug_fix;
#X text 25 37 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 254 256 13;
#X obj 254 226 sel 1;
#X obj 46 120 inlet actual_value;
#X obj 181 315 outlet fixed_value;
#X connect 0 0 1 0;
#X connect 0 1 3 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 10 0;
#X connect 3 0 8 0;
#X connect 4 0 10 0;
#X connect 5 0 1 1;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 8 1 4 1;
#X connect 9 0 0 0;
#X restore 25 120 pd bug13;
#N canvas 1 82 499 375 bug13 0;
#X obj 46 187 t f f;
#X obj 181 159 *;
#X obj 181 181 sel 0;
#X obj 254 204 == 10;
#X obj 181 273 f;
#X obj 199 120 inlet 13_bug_fix;
#X text 25 37 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 254 256 13;
#X obj 254 226 sel 1;
#X obj 46 120 inlet actual_value;
#X obj 181 315 outlet fixed_value;
#X connect 0 0 1 0;
#X connect 0 1 3 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 10 0;
#X connect 3 0 8 0;
#X connect 4 0 10 0;
#X connect 5 0 1 1;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 8 1 4 1;
#X connect 9 0 0 0;
#X restore 95 120 pd bug13;
#X obj 25 59 inlet;
#X connect 0 0 2 0;
#X connect 1 0 0 1;
#X connect 3 0 4 0;
#X connect 3 1 4 1;
#X connect 3 2 5 0;
#X connect 3 3 5 1;
#X connect 4 0 0 0;
#X connect 5 0 1 0;
#X connect 6 0 3 0;
#X restore 25 307 pd analog_res;
#N canvas 1 81 450 300 connections 0;
#X obj 46 230 s connections;
#X obj 46 42 inlet;
#N canvas 1 82 499 375 bug13 0;
#X obj 46 187 t f f;
#X obj 181 159 *;
#X obj 181 181 sel 0;
#X obj 254 204 == 10;
#X obj 181 273 f;
#X obj 199 120 inlet 13_bug_fix;
#X text 25 37 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 254 256 13;
#X obj 254 226 sel 1;
#X obj 46 120 inlet actual_value;
#X obj 181 315 outlet fixed_value;
#X connect 0 0 1 0;
#X connect 0 1 3 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 10 0;
#X connect 3 0 8 0;
#X connect 4 0 10 0;
#X connect 5 0 1 1;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 8 1 4 1;
#X connect 9 0 0 0;
#X restore 46 163 pd bug13;
#X obj 46 68 unpack f f f f f f f f f f;
#N canvas 1 82 499 375 bug13 0;
#X obj 46 187 t f f;
#X obj 181 159 *;
#X obj 181 181 sel 0;
#X obj 254 204 == 10;
#X obj 181 273 f;
#X obj 199 120 inlet 13_bug_fix;
#X text 25 37 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 254 256 13;
#X obj 254 226 sel 1;
#X obj 46 120 inlet actual_value;
#X obj 181 315 outlet fixed_value;
#X connect 0 0 1 0;
#X connect 0 1 3 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 10 0;
#X connect 3 0 8 0;
#X connect 4 0 10 0;
#X connect 5 0 1 1;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 8 1 4 1;
#X connect 9 0 0 0;
#X restore 80 138 pd bug13;
#N canvas 1 82 499 375 bug13 0;
#X obj 46 187 t f f;
#X obj 181 159 *;
#X obj 181 181 sel 0;
#X obj 254 204 == 10;
#X obj 181 273 f;
#X obj 199 120 inlet 13_bug_fix;
#X text 25 37 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 254 256 13;
#X obj 254 226 sel 1;
#X obj 46 120 inlet actual_value;
#X obj 181 315 outlet fixed_value;
#X connect 0 0 1 0;
#X connect 0 1 3 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 10 0;
#X connect 3 0 8 0;
#X connect 4 0 10 0;
#X connect 5 0 1 1;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 8 1 4 1;
#X connect 9 0 0 0;
#X restore 114 112 pd bug13;
#N canvas 1 82 499 375 bug13 0;
#X obj 46 187 t f f;
#X obj 181 159 *;
#X obj 181 181 sel 0;
#X obj 254 204 == 10;
#X obj 181 273 f;
#X obj 199 120 inlet 13_bug_fix;
#X text 25 37 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 254 256 13;
#X obj 254 226 sel 1;
#X obj 46 120 inlet actual_value;
#X obj 181 315 outlet fixed_value;
#X connect 0 0 1 0;
#X connect 0 1 3 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 10 0;
#X connect 3 0 8 0;
#X connect 4 0 10 0;
#X connect 5 0 1 1;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 8 1 4 1;
#X connect 9 0 0 0;
#X restore 148 143 pd bug13;
#N canvas 1 82 499 375 bug13 0;
#X obj 46 187 t f f;
#X obj 181 159 *;
#X obj 181 181 sel 0;
#X obj 254 204 == 10;
#X obj 181 273 f;
#X obj 199 120 inlet 13_bug_fix;
#X text 25 37 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 254 256 13;
#X obj 254 226 sel 1;
#X obj 46 120 inlet actual_value;
#X obj 181 315 outlet fixed_value;
#X connect 0 0 1 0;
#X connect 0 1 3 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 10 0;
#X connect 3 0 8 0;
#X connect 4 0 10 0;
#X connect 5 0 1 1;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 8 1 4 1;
#X connect 9 0 0 0;
#X restore 182 178 pd bug13;
#X obj 46 195 pack f f f f f;
#X connect 1 0 3 0;
#X connect 2 0 8 0;
#X connect 3 0 2 0;
#X connect 3 1 2 1;
#X connect 3 2 4 0;
#X connect 3 3 4 1;
#X connect 3 4 5 0;
#X connect 3 5 5 1;
#X connect 3 6 6 0;
#X connect 3 7 6 1;
#X connect 3 8 7 0;
#X connect 3 9 7 1;
#X connect 4 0 8 1;
#X connect 5 0 8 2;
#X connect 6 0 8 3;
#X connect 7 0 8 4;
#X connect 8 0 0 0;
#X restore 42 283 pd connections;
#N canvas 1 81 450 300 num_io 0;
#X obj 46 214 s num_io;
#X obj 116 174 * 128;
#X obj 46 117 unpack f f f f;
#N canvas 1 82 499 375 bug13 0;
#X obj 46 187 t f f;
#X obj 181 159 *;
#X obj 181 181 sel 0;
#X obj 254 204 == 10;
#X obj 181 273 f;
#X obj 199 120 inlet 13_bug_fix;
#X text 25 37 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 254 256 13;
#X obj 254 226 sel 1;
#X obj 46 120 inlet actual_value;
#X obj 181 315 outlet fixed_value;
#X connect 0 0 1 0;
#X connect 0 1 3 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 10 0;
#X connect 3 0 8 0;
#X connect 4 0 10 0;
#X connect 5 0 1 1;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 8 1 4 1;
#X connect 9 0 0 0;
#X restore 46 150 pd bug13;
#N canvas 1 82 499 375 bug13 0;
#X obj 46 187 t f f;
#X obj 181 159 *;
#X obj 181 181 sel 0;
#X obj 254 204 == 10;
#X obj 181 273 f;
#X obj 199 120 inlet 13_bug_fix;
#X text 25 37 In case the Teensy sends 13 \, we'll receive a 10 here
\, and the multiplication below will result in 0 \, banging 13 instead
;
#X msg 254 256 13;
#X obj 254 226 sel 1;
#X obj 46 120 inlet actual_value;
#X obj 181 315 outlet fixed_value;
#X connect 0 0 1 0;
#X connect 0 1 3 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 10 0;
#X connect 3 0 8 0;
#X connect 4 0 10 0;
#X connect 5 0 1 1;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 8 1 4 1;
#X connect 9 0 0 0;
#X restore 116 150 pd bug13;
#X obj 46 191 pack;
#X obj 46 92 inlet;
#X connect 1 0 5 1;
#X connect 2 0 3 0;
#X connect 2 1 3 1;
#X connect 2 2 4 0;
#X connect 2 3 4 1;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 0 0;
#X connect 6 0 2 0;
#X restore 59 259 pd num_io;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 7 1;
#X connect 4 0 14 0;
#X connect 4 1 15 0;
#X connect 4 2 16 0;
#X connect 4 3 3 0;
#X connect 4 4 13 0;
#X connect 6 0 7 0;
#X connect 7 0 0 0;
#X connect 7 1 0 1;
#X connect 8 0 9 0;
#X connect 9 0 1 1;
#X connect 10 0 12 0;
#X connect 11 0 0 0;
#X connect 12 0 1 1;
#X restore 165 445 pd generic_data;
#X obj 78 487 s \$0-close_spigots;
#X obj 44 532 s \$0-clear_repacks;
#X obj 27 555 s \$0-open_spigots;
#X obj 61 509 s \$0-reset_main_router;
#X connect 0 0 21 0;
#X connect 1 0 16 0;
#X connect 2 0 16 0;
#X connect 3 0 16 0;
#X connect 4 0 6 0;
#X connect 4 1 17 0;
#X connect 6 0 26 0;
#X connect 6 1 25 0;
#X connect 6 2 27 0;
#X connect 6 3 24 0;
#X connect 7 0 15 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X connect 11 0 16 0;
#X connect 11 1 12 0;
#X connect 12 0 10 0;
#X connect 13 0 10 1;
#X connect 15 0 20 0;
#X connect 16 0 4 0;
#X connect 16 1 7 0;
#X connect 17 0 23 0;
#X connect 17 1 22 0;
#X connect 18 0 16 0;
#X connect 19 0 16 0;
#X connect 20 0 19 0;
#X connect 20 1 13 0;
#X connect 21 0 1 0;
#X connect 21 1 2 0;
#X connect 21 2 3 0;
#X connect 21 3 16 0;
